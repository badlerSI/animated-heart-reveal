
/* -------------------------------------------------------------------
   waveAnimation.css
   ------------------------------------------------------------------- */

/* 1. Wrapper sits above Soul (z-index set in TSX) */
#wave-wrapper {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  transform-origin: center center;
  pointer-events: none;
}

/* 2. Slice container (lower layer) */
.wave-container {
  --fps: 30;
  --slice-w: 38px;
  --slice-h: 300px;
  display: flex;
  overflow: hidden;
  opacity: 1;
  z-index: 1;
}

/* 3. Static PNG (top layer), hidden until fade-in */
.static-wave {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  image-rendering: crisp-edges;
  object-fit: none;
  opacity: 0;    /* start invisible */
  z-index: 10;   /* above the slices */
}

/* 4. When wrapper receives this class, do the two opposite fades */
#wave-wrapper.fade-out-smooth .wave-container {
  animation: fadeOutSmooth 0.4s ease-in-out forwards;
}

#wave-wrapper.fade-out-smooth .static-wave {
  animation: fadeInSmoothLong 0.6s ease-in-out forwards;
}

/* 5. Individual slice styling */
.wave-container img.wave-slice {
  flex: 0 0 var(--slice-w);
  width: var(--slice-w);
  height: var(--slice-h);
  object-fit: none;
  image-rendering: crisp-edges;
  opacity: 0;
  animation:
    pop       0s steps(1,end) forwards,
    wave-glow 0.8s ease-out forwards;
  animation-delay: calc(var(--i) / var(--fps) * 1s);
}

/* 6. Keyframes */
@keyframes pop {
  to {
    opacity: 1;
  }
}

@keyframes fadeInSmoothLong {
  0%   { opacity: 0;   }
  30%  { opacity: 0.8; }
  100% { opacity: 1;   }
}

@keyframes fadeOutSmooth {
  0%   { opacity: 1;   }
  70%  { opacity: 0.8; }
  100% { opacity: 0;   }
}

@keyframes wave-glow {
  0%   { filter: drop-shadow(0 0 22px #4DFFFF); }
  50%  { filter: drop-shadow(0 0 30px #4DFFFF); }
  100% { filter: drop-shadow(0 0 4px rgba(77,255,255,0.6)); }
}